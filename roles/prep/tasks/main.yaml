---
- name: Add a repo
  ansible.builtin.lineinfile:
    path: /etc/apk/repositories
    line: http://dl-cdn.alpinelinux.org/alpine/v3.16/community
    create: yes

- name: Update repositories and install curl package
  community.general.apk:
    name: curl, python3, tar, docker, docker-compose
    update_cache: true

- name: Make "docker" start on boot and start now, if not started.
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started

- name: download helm
  ansible.builtin.unarchive:
    src: https://get.helm.sh/helm-v3.10.3-linux-amd64.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Creates directory .kube
  file:
    path: /root/.kube/
    state: directory

- name: Copy K3s for kubectl
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /root/.kube/config
    remote_src: true
    mode: '0600'

- name: copy helm into /usr/local/bin/helm
  ansible.builtin.copy:
    src: /tmp/linux-amd64/helm
    dest: /usr/local/bin/helm
    remote_src: true
    mode: '0744'

- name: Generate an OpenSSH keypair with the default values (4096 bits, rsa) and encrypted private key
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_rsa
    passphrase: passwd

- name: fetch all public ssh keys
  shell: cat ~/.ssh/id_rsa.pub
  register: ssh_keys
  tags:
    - ssh

- name: check keys
  debug: msg="{{ ssh_keys.stdout }}"
  tags:
    - ssh

- name: deploy keys on all servers
  authorized_key: user=root key="{{ item[0] }}"
  delegate_to: "{{ item[1] }}"
  with_nested:
    - "{{ ssh_keys.stdout }}"
    - "{{groups['all']}}"
  tags:
    - ssh

#- name: Recursively remove everything in /tmp/
#  ansible.builtin.file:
#    path: /tmp/*
#    state: absent